reset;
model VRP_var.mod;
data VRP_var.dat;

# Initialization of c
for {i in NODES} {
  let cost[i,i] := 0;
}

for {i in CLIENTS} {
  let B[i,i] := 0;
}
let B[3,3] := -M;

for {(i,j) in ARCS} {
  let cost[i,j] := 95 + (xcoord[i]-xcoord[j])**2 + 8*((ycoord[i]-ycoord[j])**2);
}

for {(i,j) in CLIENTS cross CLIENTS: i!=j} {
  let B[i,j] := 20 + (xcoord[j]-xcoord[i])**4 + 8*((ycoord[i]-ycoord[j])**2);
}

display cost;

for {l in 1 .. card(NODES)} {
  for {i in NODES, j in NODES} {
    if cost[i,j] > cost[i,l] + cost[l,j] then {
      let cost[i,j] := cost[i,l] + cost[l,j];
    }
  }
}

display cost;

option solver gurobi;
solve;

for {(i,j) in CLIENTS cross CLIENTS} if x[i,j] >= 1 then {printf "%i --> %i\n", i, j};
